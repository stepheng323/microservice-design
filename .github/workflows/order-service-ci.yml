name: Order Service CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'apps/order/**'
      - 'libs/**'
      - 'package.json'
      - 'nx.json'
      - 'k8s/**'
      - '.github/workflows/order-service-ci.yml'

  pull_request:
    branches:
      - main
    paths:
      - 'apps/order-service/**'
      - 'libs/**'
      - 'package.json'
      - 'nx.json'
      - 'k8s/**'
      - '.github/workflows/order-service-ci.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build order service
        run: npx nx run order:build --prod

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/order/Dockerfile
          push: true
          tags: |
            stepheng323/order-service:latest
            stepheng323/order-service:${{ github.sha }}
          cache-from: type=registry,ref=stepheng323/order-service:buildcache
          cache-to: type=registry,ref=stepheng323/order-service:buildcache,mode=max

  migrate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region us-east-1

      - name: Run migrations
        run: |
          kubectl run order-migration-${{ github.sha }} \
            --image=stepheng323/order-service:${{ github.sha }} \
            --restart=Never \
            --command -- npx prisma migrate deploy 
            kubectl wait --for=condition=complete pod/order-migration-${{ github.sha }} --timeout=5m || {
              echo "Migration failed. Checking logs..."
              kubectl logs order-migration-${{ github.sha }}
              kubectl delete pod order-migration-${{ github.sha }}
              exit 1
            }
            echo "Migration completed. Checking logs..."
            kubectl logs order-migration-${{ github.sha }}
            kubectl delete pod order-migration-${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build, migrate]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region us-east-1

      - name: Deploy to EKS
        run: kubectl apply -f ./k8s
