name: User Service CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'apps/user/**'
      - 'libs/**'
      - 'package.json'
      - 'nx.json'
      - 'k8s/**'
      - '.github/workflows/user-service-ci.yml'

  pull_request:
    branches:
      - main
    paths:
      - 'apps/user-service/**'
      - 'libs/**'
      - 'package.json'
      - 'nx.json'
      - 'k8s/**'
      - '.github/workflows/user-service-ci.yml'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build user service
        run: npx nx run user:build --prod

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/user/Dockerfile
          push: true
          tags: |
            stepheng323/user-service:latest
            stepheng323/user-service:${{ github.sha }}
          cache-from: type=registry,ref=stepheng323/user-service:buildcache
          cache-to: type=registry,ref=stepheng323/user-service:buildcache,mode=max

      - name: Build migration image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.migration
          push: true
          tags: |
            stepheng323/migration:${{ github.sha }}
          cache-from: type=registry,ref=stepheng323/user-migration:buildcache
          cache-to: type=registry,ref=stepheng323/user-migration:buildcache,mode=max

  migrate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region us-east-1

      - name: Run migrations
        run: |
          # Run migration job
          cat <<EOF | kubectl apply -f -
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: migration-${{ github.sha }}
          spec:
            ttlSecondsAfterFinished: 300
            backoffLimit: 2
            template:
              spec:
                containers:
                - name: migration
                  image: stepheng323/migration:${{ github.sha }}
                  command: ["npx", "nx", "run", "user:prisma-migrate"]
                  resources:
                    limits:
                      memory: "512Mi"
                      cpu: "500m"
                    requests:
                      memory: "256Mi"
                      cpu: "250m"
                  env:
                    - name: NODE_ENV
                      value: "production"
                    # Add any other necessary environment variables from secrets
                restartPolicy: Never
          EOF

          # Wait for job to complete and handle errors
          echo "Waiting for migration job to complete..."
          if ! kubectl wait --for=condition=complete job/user-migration-${{ github.sha }} --timeout=5m; then
            echo "Migration failed. Fetching logs..."
            kubectl logs -l job-name=migration-${{ github.sha }}

            echo "Checking if there were any database conflicts..."
            if kubectl logs -l job-name=migration-${{ github.sha }} | grep -i "conflict"; then
              echo "Database conflict detected. Manual intervention required."
            fi

            echo "Cleaning up failed migration job..."
            kubectl delete job migration-${{ github.sha }}
            exit 1
          fi

          # Log successful migration
          echo "Migration completed successfully. Fetching logs..."
          kubectl logs -l job-name=migration-${{ github.sha }}

          # Cleanup
          echo "Cleaning up migration job..."
          kubectl delete job migration-${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build, migrate]
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region us-east-1

      - name: Deploy to EKS
        run: |
          # Apply configurations
          kubectl apply -f ./k8s

          # Wait for deployment to roll out
          kubectl rollout status deployment/user-service -n default --timeout=5m || {
            echo "Deployment failed. Rolling back..."
            kubectl rollout undo deployment/user-service -n default
            exit 1
          }
