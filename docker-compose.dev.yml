services:
  user:
    environment:
      NODE_ENV: development
    build:
      context: .
      dockerfile: apps/user/Dockerfile.dev
      args:
        - SERVICE_NAME=user
    volumes:
      - .:/app
      - /app/node_modules
    command: bash -c "npx nx run user:prisma-migrate --name=update && npx nx serve user --host 0.0.0.0"
    ports:
      - "4000:4000"
    depends_on:
      - user-db
      - redis
    restart: always

  user-db:
    image: postgres:alpine
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - user-data:/var/lib/postgresql/data
    ports:
      - "5431:5432"

  product:
    environment:
      NODE_ENV: development
    build:
      context: .
      dockerfile: apps/product/Dockerfile.dev
      args:
        - SERVICE_NAME=product
    volumes:
      - .:/app
      - /app/node_modules
    command: bash -c "npx nx run product:prisma-migrate --name=update && npx nx serve product --host 0.0.0.0"
    ports:
      - "4001:4001"
    depends_on:
      - product-db
      - redis
    restart: always

  product-db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: product_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - product-data:/var/lib/mysql
    ports:
      - "3306:3306"

  order:
    environment:
      NODE_ENV: production
    build:
      context: .
      dockerfile: apps/order/Dockerfile
      args:
        - SERVICE_NAME=order
    volumes:
      - .:/app
      - /app/node_modules
    command: bash -c "npx nx run order:prisma-migrate --name=update && npx nx serve order --host 0.0.0.0"
    ports:
      - "4002:4002"
    depends_on:
      - order-db
      - redis
    restart: always

  order-db:
    image: postgres:alpine
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - order-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest


volumes:
  user-data:
  product-data:
  order-data:
  rabbitmq-data:
